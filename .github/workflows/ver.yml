# act push
name: test-version
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: üõéÔ∏è  Checkout repository
        id: check-repo
        uses: actions/checkout@v3

      - name: üè∑Ô∏è  Get new semantic version string
        id: semver_tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main,master,release
          pre_release_branches: develop,dev,wip
          fetch_all_tags: true
          dry_run: true
          default_bump: false
          custom_release_rules: |
            force_bump_patch:patch,force_bump_minor:minor,force_bump_major:major

      - id: correct-version
        run: |
          if [ -z "${{ steps.semver_tag.outputs.new_tag }}" ]; then
            echo "::set-output name=new_tag::${{ steps.semver_tag.outputs.previous_tag }}"
            echo "::set-output name=new_version::${{ steps.semver_tag.outputs.previous_version }}"
          else
            echo "::set-output name=new_tag::${{ steps.semver_tag.outputs.new_tag }}"
            echo "::set-output name=new_version::${{ steps.semver_tag.outputs.new_version }}"
          fi

    outputs:
      new_tag: ${{ steps.correct-version.outputs.new_tag }}
      new_version: ${{ steps.correct-version.outputs.new_version }}
      previous_tag: ${{ steps.semver_tag.outputs.previous_tag }}
      previous_version: ${{ steps.semver_tag.outputs.previous_version }}
      release_type: ${{ steps.semver_tag.outputs.release_type }}
      changelog: ${{ steps.semver_tag.outputs.changelog }}
      repo_lower: ${{ steps.semver_tag.outputs.repo_lower }}
      datetime: ${{ steps.semver_tag.outputs.datetime }}


  print-info:
    runs-on: ubuntu-latest
    needs: versioning
    steps:
      - run: |
          echo "${{needs.versioning.outputs.new_tag}}"
          echo "${{needs.versioning.outputs.new_version}}"
          echo "${{needs.versioning.outputs.previous_tag}}"
          echo "${{needs.versioning.outputs.previous_version}}"
          echo "${{needs.versioning.outputs.release_type}}"
          echo "${{needs.versioning.outputs.changelog}}"
          echo "${{toJSON(github)}}"
